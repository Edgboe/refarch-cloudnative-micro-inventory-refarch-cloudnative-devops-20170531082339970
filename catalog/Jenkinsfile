podTemplate(label: 'pod',
    volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
              secretVolume(secretName: 'bx-auth-secret-new', mountPath: '/var/run/secrets/bx-auth-secret'),
              secretVolume(secretName: 'bluemix-default-secret', mountPath: '/var/run/secrets/bluemix-default-secret'),
              configMapVolume(configMapName: 'github-config', mountPath: '/var/run/configs/github')],
    containers: [
        containerTemplate(name: 'slave-container', image: 'ibmcase/jenkins-slave:10', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'java', image: 'openjdk:8-jdk-alpine', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'node', image: 'node:7-alpine', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'bx', image: 'jkwong/bluemix-deployer', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'docker:17.03', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'kubectl', image: 'lachlanevenson/k8s-kubectl', alwaysPullImage: true, ttyEnabled: true, command: 'cat')
    ]) {

    node ('pod') {
        stage('Build') {
            checkout scm
            container('java') {
                stage('Build Gradle Project') {
                    sh """
                    #!/bin/bash
                    cd catalog
                    ./gradlew build -x test
                    ./gradlew docker
                    """
                }
            }
        }

        stage('Docker') {
            container('docker') {
                stage ('Build Docker Image') {
                    sh """
                    #!/bin/bash
                    cd catalog/docker
                    docker build -t cloudnative/catalog-jenkins .
                    """
                }
                stage ('Push Docker Image to Registry') {
                    sh """
                    cd catalog/scripts
                    ./push_to_docker.sh ${env.BUILD_NUMBER}
                    """
                }
            }
        }

        /*container('slave-container') {
            }
            stage ('Deploy to Kubernetes') {
                sh """
                #!/bin/bash
                cd catalog/scripts
                ./deploy.sh ${env.BUILD_NUMBER}
                """
            }
        }*/
        /*
        container('slave-container') {
            stage ('Build') {
                checkout scm
                sh """
                #!/bin/bash
                cd catalog
                ./gradlew build -x test
                """
            }
            stage ('Build Docker Image') {
                sh """
                #!/bin/bash
                cd catalog
                ./gradlew docker
                cd docker
                docker build -t cloudnative/catalog-jenkins .
                """
            }
            stage ('Push Docker Image to Registry') {
                sh """
                #!/bin/bash
                cd catalog/scripts
                ./push_to_docker.sh ${env.BUILD_NUMBER}
                """
            }
            stage ('Deploy to Kubernetes') {
                sh """
                #!/bin/bash
                cd catalog/scripts
                ./deploy.sh ${env.BUILD_NUMBER}
                """
            }
        }*/
    }
}