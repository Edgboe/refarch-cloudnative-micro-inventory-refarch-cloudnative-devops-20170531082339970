podTemplate(label: 'pod',
    volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
              secretVolume(secretName: 'bx-auth-secret-new', mountPath: '/var/run/secrets/bx-auth-secret'),
              secretVolume(secretName: 'bluemix-default-secret', mountPath: '/var/run/secrets/bluemix-default-secret')],
    containers: [
        containerTemplate(name: 'java', image: 'openjdk:8-jdk-alpine', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'docker:17.03', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'helm', image: 'ibmcase/helm-git:2', alwaysPullImage: true, ttyEnabled: true, command: 'cat')
    ]) {

    node ('pod') {

        stage('Build') {
            checkout scm
            container('java') {
                stage('Build Gradle Project') {
                    sh """
                    #!/bin/bash
                    cd catalog
                    ./gradlew build -x test
                    ./gradlew docker
                    """
                }
            }
        }

        stage('Docker') {
            container('docker') {
                stage ('Build Docker Image') {
                    sh """
                    #!/bin/bash
                    cd catalog/docker
                    docker build -t ibmcase/catalog:${env.BUILD_NUMBER} .
                    """
                }
                stage ('Push Docker Image to Registry') {
                    sh """
                    #!/bin/bash

                    DOCKER_USER=`cat /var/run/secrets/bx-auth-secret/DOCKER_USER`
                    DOCKER_PASS=`cat /var/run/secrets/bx-auth-secret/DOCKER_PASS`

                    docker login -u \${DOCKER_USER} -p \${DOCKER_PASS}
                    docker push ibmcase/catalog:${env.BUILD_NUMBER}
                    kubectl get nodes
                    """
                }
            }
        }

        stage('Package and Deploy Chart') {
            container('helm') {
                stage ('Package and Deploy Chart') {
                    sh """
                    #!/bin/bash

                    # Setup Git
                    GITHUB_NAME=`cat /var/run/secrets/bx-auth-secret/GITHUB_NAME`
                    GITHUB_USER=`cat /var/run/secrets/bx-auth-secret/GITHUB_USER`
                    GITHUB_TOKEN=`cat /var/run/secrets/bx-auth-secret/GITHUB_TOKEN`

                    git config --global user.name \"\${GITHUB_NAME}\"
                    git config --global user.email \${GITHUB_USER}

                    # Edit chart values using yaml (NEED TO INSTALL YAML) - Call image chart deployer
                    cd chart/catalog
                    string_to_replace=`yaml read values.yaml image.tag`
                    sed -i.bak s%\${string_to_replace}%${env.BUILD_NUMBER}%g values.yaml

                    # Package chart
                    cd ..
                    helm package catalog

                    # Clone devops
                    git clone https://github.com/fabiogomezdiaz/refarch-cloudnative-devops.git

                    # Move package chart
                    mv -f *.tgz refarch-cloudnative-devops/docs/edge/
                    cd refarch-cloudnative-devops/docs

                    # Reindex repo with new chart information
                    helm repo index edge

                    # git add & commit new change
                    git add -A && git commit -m \"Created new catalog chart from build ${env.BUILD_NUMBER}\"

                    # push to github using https
                    git push origin master

                    """
                }
            }
        }
    }
}