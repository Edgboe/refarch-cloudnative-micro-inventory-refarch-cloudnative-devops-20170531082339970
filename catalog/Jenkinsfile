podTemplate(label: 'pod',
    volumes: [hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
              secretVolume(secretName: 'bx-auth-secret-new', mountPath: '/var/run/secrets/bx-auth-secret'),
              secretVolume(secretName: 'bluemix-default-secret', mountPath: '/var/run/secrets/bluemix-default-secret'),
              configMapVolume(configMapName: 'github-config', mountPath: '/var/run/configs/github')],
    containers: [
        containerTemplate(name: 'java', image: 'openjdk:8-jdk-alpine', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'docker', image: 'docker:17.03', alwaysPullImage: true, ttyEnabled: true, command: 'cat'),
        containerTemplate(name: 'helm', image: 'lachlanevenson/k8s-helm:v2.3.1', alwaysPullImage: true, ttyEnabled: true, command: 'cat')
    ]) {

    node ('pod') {

        stage('init') {
            container('helm') {
                stage ('Deploy chart') {
                    sh """
                    #!/bin/bash
                    kubectl get services
                    helm init
                    """
                }
            }
        }

        stage('Build') {
            checkout scm
            container('java') {
                stage('Build Gradle Project') {
                    sh """
                    #!/bin/bash
                    cd catalog
                    ./gradlew build -x test
                    ./gradlew docker
                    """
                }
            }
        }

        stage('Docker') {
            container('docker') {
                stage ('Build Docker Image') {
                    sh """
                    #!/bin/bash
                    cd catalog/docker
                    docker build -t ibmcase/catalog:${env.BUILD_NUMBER} .
                    """
                }
                stage ('Push Docker Image to Registry') {
                    sh """
                    #!/bin/bash

                    DOCKER_USER=`cat /var/run/secrets/bx-auth-secret/DOCKER_USER`
                    set +x
                    DOCKER_PASS=`cat /var/run/secrets/bx-auth-secret/DOCKER_PASS`

                    docker login -u \${DOCKER_USER} -p \${DOCKER_PASS}
                    set -x
                    docker push ibmcase/catalog:${env.BUILD_NUMBER}
                    kubectl get nodes
                    """
                }
            }
        }

        stage('Deploy') {
            container('helm') {
                stage ('Deploy chart') {
                    sh """
                    #!/bin/bash
                    kubectl get services
                    helm init
                    """
                }
            }
        }
    }
}